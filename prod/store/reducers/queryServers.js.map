{"version":3,"sources":["../../../src/store/reducers/queryServers.js"],"names":["queryServers","state","type","payload","serverId","queryChannel","list","queryServer","sortedList","sort","a","b","timestamp","updatedList","filter","_","i","index"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1B,EAA0B;;AAAA;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACtD,UAAQD,IAAR;AACE,SAAK,MAAL;AAAa;AACX,mCACGC,OAAO,CAACC,QADX,EACsB;AAClBC,UAAAA,YAAY,EAAE,IADI;AAElBC,UAAAA,IAAI,EAAE;AAFY,SADtB;AAMD;;AAED,SAAK,mBAAL;AAA0B;AACxB,iCACKL,KADL,sBAEGE,OAAO,CAACC,QAFX,oBAGOH,KAAK,CAACE,OAAO,CAACC,QAAT,CAHZ;AAIIC,UAAAA,YAAY,EAAEF,OAAO,CAACE;AAJ1B;AAOD;;AAED,SAAK,kBAAL;AAAyB;AAAA,YACfC,IADe,GACNL,KAAK,CAACE,OAAO,CAACC,QAAT,CADC,CACfE,IADe;AAEvB,iCACKL,KADL,sBAEGE,OAAO,CAACC,QAFX,oBAGOH,KAAK,CAACE,OAAO,CAACC,QAAT,CAHZ;AAIIE,UAAAA,IAAI,+BAAMA,IAAN,IAAYH,OAAO,CAACI,WAApB;AAJR;AAOD;;AAED,SAAK,qBAAL;AAA4B;AAAA,YAClBD,KADkB,GACTL,KAAK,CAACE,OAAO,CAACC,QAAT,CADI,CAClBE,IADkB;;AAE1B,YAAME,UAAU,GAAGF,KAAI,CAACG,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAA1B;AAAA,SAAV,CAAnB;;AACA,YAAMC,WAAW,GAAGL,UAAU,CAACM,MAAX,CAAkB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUA,CAAC,KAAKb,OAAO,CAACc,KAAxB;AAAA,SAAlB,CAApB;AACA,iCACKhB,KADL,sBAEGE,OAAO,CAACC,QAFX,oBAGOH,KAAK,CAACE,OAAO,CAACC,QAAT,CAHZ;AAIIE,UAAAA,IAAI,EAAEO;AAJV;AAOD;;AAED,SAAK,sBAAL;AAA6B;AAC3B,iCACKZ,KADL,sBAEGE,OAAO,CAACC,QAFX,oBAGOH,KAAK,CAACE,OAAO,CAACC,QAAT,CAHZ;AAIIE,UAAAA,IAAI,EAAEH,OAAO,CAACG;AAJlB;AAOD;;AAED;AACE,aAAOL,KAAP;AAvDJ;AAyDD,CA1DD;;eA4DeD,Y","sourcesContent":["const queryServers = (state = {}, { type, payload }) => {\n  switch (type) {\n    case 'INIT': {\n      return {\n        [payload.serverId]: {\n          queryChannel: null,\n          list: [],\n        },\n      };\n    }\n\n    case 'SET_QUERY_CHANNEL': {\n      return {\n        ...state,\n        [payload.serverId]: {\n          ...state[payload.serverId],\n          queryChannel: payload.queryChannel,\n        },\n      };\n    }\n\n    case 'ADD_QUERY_SERVER': {\n      const { list } = state[payload.serverId];\n      return {\n        ...state,\n        [payload.serverId]: {\n          ...state[payload.serverId],\n          list: [...list, payload.queryServer],\n        },\n      };\n    }\n\n    case 'REMOVE_QUERY_SERVER': {\n      const { list } = state[payload.serverId];\n      const sortedList = list.sort((a, b) => a.timestamp - b.timestamp);\n      const updatedList = sortedList.filter((_, i) => i !== payload.index);\n      return {\n        ...state,\n        [payload.serverId]: {\n          ...state[payload.serverId],\n          list: updatedList,\n        },\n      };\n    }\n\n    case 'ASSIGN_QUERY_SERVERS': {\n      return {\n        ...state,\n        [payload.serverId]: {\n          ...state[payload.serverId],\n          list: payload.list,\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default queryServers;\n"],"file":"queryServers.js"}