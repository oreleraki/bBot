{"version":3,"sources":["../src/bot.js"],"names":["dotenv","config","bBot","Client","disabledEvents","on","message","author","equals","user","content","startsWith","prefix","id","username","roles","member","serverId","channel","guild","substring","length","split","filter","Boolean","first","args","action","toLowerCase","isSolo","foundCommand","commands","find","cmd","solo","aliases","includes","handlers","key","send","console","log","Date","toUTCString","mongoose","connect","useNewUrlParser","poolSize","useFindAndModify","hydrateStore","login","process","env","DISCORD_BOT_TOKEN","DiscordServers","exec","dServers","UT99QueryServers","qServers","GameTypes","gameTypes","forEach","server_id","pug_channel","query_channel","store","dispatch","pugChannel","queryChannel","query_servers","list","Array","from","game_types"],"mappings":"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","sourcesContent":["import '@babel/polyfill';\nimport dotenv from 'dotenv';\nimport mongoose from 'mongoose';\nimport { Client } from 'discord.js';\nimport store from './store';\nimport {\n  INIT,\n  setQueryChannel,\n  setPugChannel,\n  assignQueryServers,\n  assignGameTypes,\n} from './store/actions';\nimport { DiscordServers, UT99QueryServers, GameTypes } from './models';\nimport { handlers, commands } from './commands';\nimport { sanitizeName } from './utils';\nimport { prefix } from './constants';\n\ndotenv.config();\n\nconst bBot = new Client({\n  disabledEvents: ['TYPING_START', 'CHANNEL_UPDATE', 'USER_UPDATE'],\n});\n\nbBot.on('message', async message => {\n  if (message.author.equals(bBot.user)) return;\n  if (!message.content.startsWith(prefix)) return;\n\n  const { id, username } = message.author;\n  const { roles } = message.member;\n  const {\n    channel: {\n      guild: { id: serverId },\n    },\n  } = message;\n\n  if (!serverId) return;\n\n  const [first, ...args] = message.content\n    .substring(prefix.length)\n    .split(' ')\n    .filter(Boolean);\n  const action = first && first.toLowerCase();\n  const isSolo = args.length === 0;\n\n  const foundCommand = commands.find(\n    cmd => cmd.solo === isSolo && cmd.aliases.includes(action)\n  );\n\n  if (foundCommand) {\n    return handlers[foundCommand.key](message, args, serverId, {\n      id,\n      roles,\n      username: sanitizeName(username),\n    });\n  }\n  message.channel.send(`Command not found`);\n});\n\n/*\n * BOT\n *  INITIALIZATION\n */\nbBot.on('ready', () => {\n  console.log(`Bot started running at ${new Date().toUTCString()}`);\n});\n\n(async () => {\n  try {\n    await mongoose.connect('mongodb://localhost:27017/bBot', {\n      useNewUrlParser: true,\n      poolSize: 5,\n      useFindAndModify: false,\n    });\n    await hydrateStore();\n    bBot.login(process.env.DISCORD_BOT_TOKEN);\n  } catch (error) {\n    console.log('error', error);\n  }\n})();\n\nconst hydrateStore = async () => {\n  const dServers = await DiscordServers.find({}).exec();\n  const qServers = await UT99QueryServers.find({}).exec();\n  const gameTypes = await GameTypes.find({}).exec();\n\n  dServers.forEach(({ server_id, pug_channel, query_channel }) => {\n    store.dispatch(INIT({ serverId: server_id }));\n    store.dispatch(\n      setPugChannel({\n        serverId: server_id,\n        pugChannel: pug_channel,\n      })\n    );\n    store.dispatch(\n      setQueryChannel({ serverId: server_id, queryChannel: query_channel })\n    );\n  });\n\n  qServers.forEach(({ server_id, query_servers }) => {\n    store.dispatch(\n      assignQueryServers({\n        serverId: server_id,\n        list: Array.from(query_servers),\n      })\n    );\n  });\n\n  gameTypes.forEach(({ server_id, game_types }) => {\n    store.dispatch(\n      assignGameTypes({\n        serverId: server_id,\n        gameTypes: Array.from(game_types),\n      })\n    );\n  });\n};\n"],"file":"bot.js"}