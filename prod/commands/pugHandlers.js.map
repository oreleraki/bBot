{"version":3,"sources":["../../src/commands/pugHandlers.js"],"names":["addGameType","serverId","channel","gameName","noOfPlayers","noOfTeams","roles","privilegedRoles","isNaN","send","GameTypes","findOne","server_id","exec","list","game_types","some","g","name","toLowerCase","pickingOrder","parseInt","newGameType","findOneAndUpdate","$push","console","log","delGameType","rest","updatedGameTypes","filter"],"mappings":"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","sourcesContent":["import store from '../store';\nimport { GameTypes } from '../models';\nimport { computePickingOrder, hasPrivilegedRole } from '../utils';\nimport { privilegedRoles } from '../constants';\n\nexport const addGameType = async (\n  { channel },\n  [gameName, noOfPlayers, noOfTeams],\n  serverId,\n  { roles }\n) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n    if (isNaN(noOfPlayers) || isNaN(noOfTeams) || !gameName)\n      return channel.send('Invalid command');\n\n    const { game_types: list } = await GameTypes.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (list.some(g => g.name === gameName.toLowerCase()))\n      return channel.send('Gametype already exists');\n\n    const pickingOrder = computePickingOrder(\n      parseInt(noOfPlayers),\n      parseInt(noOfTeams)\n    );\n\n    const newGameType = {\n      name: gameName.toLowerCase(),\n      pickingOrder,\n      noOfPlayers: parseInt(noOfPlayers),\n      noOfTeams: parseInt(noOfTeams),\n    };\n\n    await GameTypes.findOneAndUpdate(\n      { server_id: serverId },\n      { $push: { game_types: newGameType } }\n    ).exec();\n\n    channel.send(`**${gameName}** has been added`);\n  } catch (error) {\n    channel.send('Something went wrong');\n    console.log(error);\n  }\n};\n\nexport const delGameType = async (\n  { channel },\n  [gameName, ...rest],\n  serverId,\n  { roles }\n) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n\n    const { game_types: list = [] } = await GameTypes.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (!list.some(g => g.name === gameName.toLowerCase()))\n      return channel.send(\"Gametype doesn't exist\");\n\n    const updatedGameTypes = list.filter(\n      g => g.name !== gameName.toLowerCase()\n    );\n\n    await GameTypes.findOneAndUpdate(\n      { server_id: serverId },\n      { game_types: updatedGameTypes }\n    ).exec();\n\n    channel.send(`**${gameName}** has been removed`);\n  } catch (error) {\n    channel.send('Something went wrong');\n    console.log(error);\n  }\n};\n"],"file":"pugHandlers.js"}