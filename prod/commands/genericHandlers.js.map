{"version":3,"sources":["../../src/commands/genericHandlers.js"],"names":["registerServer","message","_","serverId","roles","privilegedRoles","DiscordServers","findOne","server_id","exec","res","channel","send","save","setQueryChannel","findOneAndUpdate","query_channel","id","store","dispatch","queryChannel","setPugChannel","__","pug_channel","pugChannel"],"mappings":"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","sourcesContent":["import DiscordServers from '../models/discordServers';\nimport store from '../store';\nimport { initStore } from '../store/actions';\nimport { privilegedRoles } from '../constants';\nimport { hasPrivilegedRole } from '../utils';\n\nexport const registerServer = async (message, _, serverId, { roles }) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (res)\n      return message.channel.send(\n        'Server is already registered with bBot :wink:'\n      );\n\n    await new DiscordServers({ server_id: serverId }).save();\n    message.channel.send('Server registered with bBot!');\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n\nexport const setQueryChannel = async (message, _, serverId, { roles }) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (!res)\n      return message.channel.send(\n        'Please register the server with the bot! Type .register'\n      );\n\n    await DiscordServers.findOneAndUpdate(\n      { server_id: serverId },\n      { query_channel: message.channel.id }\n    ).exec();\n\n    store.dispatch(initStore({ serverId, queryChannel: message.channel.id }));\n\n    message.channel.send(\n      `<#${message.channel.id}> has been set as the query channel`\n    );\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n\nexport const setPugChannel = async (message, _, serverId, __) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (!res)\n      return message.channel.send(\n        'Please register the server with the bot! Type .register'\n      );\n\n    await DiscordServers.findOneAndUpdate(\n      { server_id: serverId },\n      { pug_channel: message.channel.id }\n    ).exec();\n\n    store.dispatch(initStore({ serverId, pugChannel: message.channel.id }));\n\n    message.channel.send(\n      `<#${message.channel.id}> has been set as the pug channel`\n    );\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n"],"file":"genericHandlers.js"}