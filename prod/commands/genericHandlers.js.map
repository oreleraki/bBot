{"version":3,"sources":["../../src/commands/genericHandlers.js"],"names":["registerServer","message","_","serverId","roles","console","log","privilegedRoles","DiscordServers","findOne","server_id","exec","res","channel","send","save","setQueryChannel","findOneAndUpdate","query_channel","id","store","dispatch","type","payload","queryChannel","setPugChannel","__","pug_channel","pugChannel"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,OAAP,EAAgBC,CAAhB,EAAmBC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+BC,YAAAA,KAA/B,QAA+BA,KAA/B;AAAA;AAE1BC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAF0B,gBAGrB,8BAAkBG,0BAAlB,EAAmCH,KAAnC,CAHqB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAKRI,2BAAeC,OAAf,CAAuB;AACvCC,cAAAA,SAAS,EAAEP;AAD4B,aAAvB,EAEfQ,IAFe,EALQ;;AAAA;AAKpBC,YAAAA,GALoB;;AAAA,iBAStBA,GATsB;AAAA;AAAA;AAAA;;AAAA,6CAUjBX,OAAO,CAACY,OAAR,CAAgBC,IAAhB,CACL,+CADK,CAViB;;AAAA;AAAA;AAAA,mBAcpB,IAAIN,0BAAJ,CAAmB;AAAEE,cAAAA,SAAS,EAAEP;AAAb,aAAnB,EAA4CY,IAA5C,EAdoB;;AAAA;AAe1Bd,YAAAA,OAAO,CAACY,OAAR,CAAgBC,IAAhB,CAAqB,8BAArB;AAf0B;AAAA;;AAAA;AAAA;AAAA;AAiB1BT,YAAAA,OAAO,CAACC,GAAR;AACAL,YAAAA,OAAO,CAACY,OAAR,CAAgBC,IAAhB,CACE,oEADF;;AAlB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdd,cAAc;AAAA;AAAA;AAAA,GAApB;;;;AAwBA,IAAMgB,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOf,OAAP,EAAgBC,CAAhB,EAAmBC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+BC,YAAAA,KAA/B,SAA+BA,KAA/B;AAAA;;AAAA,gBAEtB,8BAAkBG,0BAAlB,EAAmCH,KAAnC,CAFsB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAITI,2BAAeC,OAAf,CAAuB;AACvCC,cAAAA,SAAS,EAAEP;AAD4B,aAAvB,EAEfQ,IAFe,EAJS;;AAAA;AAIrBC,YAAAA,GAJqB;;AAAA,gBAQtBA,GARsB;AAAA;AAAA;AAAA;;AAAA,8CASlBX,OAAO,CAACY,OAAR,CAAgBC,IAAhB,CACL,yDADK,CATkB;;AAAA;AAAA;AAAA,mBAarBN,2BAAeS,gBAAf,CACJ;AAAEP,cAAAA,SAAS,EAAEP;AAAb,aADI,EAEJ;AAAEe,cAAAA,aAAa,EAAEjB,OAAO,CAACY,OAAR,CAAgBM;AAAjC,aAFI,EAGJR,IAHI,EAbqB;;AAAA;AAkB3BS,8BAAMC,QAAN,CAAe;AACbC,cAAAA,IAAI,EAAE,MADO;AAEbC,cAAAA,OAAO,EAAE;AAAEpB,gBAAAA,QAAQ,EAARA,QAAF;AAAYqB,gBAAAA,YAAY,EAAEvB,OAAO,CAACY,OAAR,CAAgBM;AAA1C;AAFI,aAAf;;AAKAlB,YAAAA,OAAO,CAACY,OAAR,CAAgBC,IAAhB,aACOb,OAAO,CAACY,OAAR,CAAgBM,EADvB;AAvB2B;AAAA;;AAAA;AAAA;AAAA;AA2B3BlB,YAAAA,OAAO,CAACY,OAAR,CAAgBC,IAAhB,CACE,oEADF;;AA3B2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfE,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAiCA,IAAMS,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOxB,OAAP,EAAgBC,CAAhB,EAAmBC,QAAnB,EAA6BuB,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEpB,8BAAkBnB,0BAAlB,EAAmCH,KAAnC,CAFoB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAIPI,2BAAeC,OAAf,CAAuB;AACvCC,cAAAA,SAAS,EAAEP;AAD4B,aAAvB,EAEfQ,IAFe,EAJO;;AAAA;AAInBC,YAAAA,GAJmB;;AAAA,gBAQpBA,GARoB;AAAA;AAAA;AAAA;;AAAA,8CAShBX,OAAO,CAACY,OAAR,CAAgBC,IAAhB,CACL,yDADK,CATgB;;AAAA;AAAA;AAAA,mBAanBN,2BAAeS,gBAAf,CACJ;AAAEP,cAAAA,SAAS,EAAEP;AAAb,aADI,EAEJ;AAAEwB,cAAAA,WAAW,EAAE1B,OAAO,CAACY,OAAR,CAAgBM;AAA/B,aAFI,EAGJR,IAHI,EAbmB;;AAAA;AAkBzBS,8BAAMC,QAAN,CAAe;AACbC,cAAAA,IAAI,EAAE,MADO;AAEbC,cAAAA,OAAO,EAAE;AAAEpB,gBAAAA,QAAQ,EAARA,QAAF;AAAYyB,gBAAAA,UAAU,EAAE3B,OAAO,CAACY,OAAR,CAAgBM;AAAxC;AAFI,aAAf;;AAKAlB,YAAAA,OAAO,CAACY,OAAR,CAAgBC,IAAhB,aACOb,OAAO,CAACY,OAAR,CAAgBM,EADvB;AAvByB;AAAA;;AAAA;AAAA;AAAA;AA2BzBlB,YAAAA,OAAO,CAACY,OAAR,CAAgBC,IAAhB,CACE,oEADF;;AA3ByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbW,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["import store from '../store';\nimport DiscordServers from '../models/discordServers';\nimport { privilegedRoles } from '../constants';\nimport { hasPrivilegedRole } from '../utils';\n\nexport const registerServer = async (message, _, serverId, { roles }) => {\n  try {\n    console.log(roles);\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (res)\n      return message.channel.send(\n        'Server is already registered with bBot :wink:'\n      );\n\n    await new DiscordServers({ server_id: serverId }).save();\n    message.channel.send('Server registered with bBot!');\n  } catch (err) {\n    console.log(err);\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n\nexport const setQueryChannel = async (message, _, serverId, { roles }) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (!res)\n      return message.channel.send(\n        'Please register the server with the bot! Type .register'\n      );\n\n    await DiscordServers.findOneAndUpdate(\n      { server_id: serverId },\n      { query_channel: message.channel.id }\n    ).exec();\n\n    store.dispatch({\n      type: 'INIT',\n      payload: { serverId, queryChannel: message.channel.id },\n    });\n\n    message.channel.send(\n      `<#${message.channel.id}> has been set as the query channel`\n    );\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n\nexport const setPugChannel = async (message, _, serverId, __) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (!res)\n      return message.channel.send(\n        'Please register the server with the bot! Type .register'\n      );\n\n    await DiscordServers.findOneAndUpdate(\n      { server_id: serverId },\n      { pug_channel: message.channel.id }\n    ).exec();\n\n    store.dispatch({\n      type: 'INIT',\n      payload: { serverId, pugChannel: message.channel.id },\n    });\n\n    message.channel.send(\n      `<#${message.channel.id}> has been set as the pug channel`\n    );\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n"],"file":"genericHandlers.js"}