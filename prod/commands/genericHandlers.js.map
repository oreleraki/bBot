{"version":3,"sources":["../../src/commands/genericHandlers.js"],"names":["registerServer","message","_","serverId","roles","privilegedRoles","DiscordServers","findOne","server_id","exec","res","channel","send","Promise","all","save","UT99QueryServers","Blocks","registerQueryChannel","findOneAndUpdate","query_channel","id","store","dispatch","queryChannel","registerPugChannel","pug_channel","pugChannel"],"mappings":"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","sourcesContent":["import { DiscordServers, UT99QueryServers, Blocks } from '../models';\nimport store from '../store';\nimport { setQueryChannel, setPugChannel } from '../store/actions';\nimport { privilegedRoles } from '../constants';\nimport { hasPrivilegedRole } from '../utils';\n\nexport const registerServer = async (message, _, serverId, { roles }) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (res)\n      return message.channel.send(\n        'Server is already registered with bBot :wink:'\n      );\n\n    await Promise.all([\n      new DiscordServers({ server_id: serverId }).save(),\n      new UT99QueryServers({ server_id: serverId }).save(),\n      new Blocks({ server_id: serverId }).save(),\n    ]);\n\n    message.channel.send('Server registered with bBot!');\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n\nexport const registerQueryChannel = async (message, _, serverId, { roles }) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (!res)\n      return message.channel.send(\n        'Please register the server with the bot! Type .register'\n      );\n\n    await DiscordServers.findOneAndUpdate(\n      { server_id: serverId },\n      { query_channel: message.channel.id }\n    ).exec();\n\n    store.dispatch(\n      setQueryChannel({ serverId, queryChannel: message.channel.id })\n    );\n\n    message.channel.send(\n      `<#${message.channel.id}> has been set as the query channel`\n    );\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n\nexport const registerPugChannel = async (message, _, serverId, { roles }) => {\n  try {\n    if (!hasPrivilegedRole(privilegedRoles, roles)) return;\n    const res = await DiscordServers.findOne({\n      server_id: serverId,\n    }).exec();\n\n    if (!res)\n      return message.channel.send(\n        'Please register the server with the bot! Type .register'\n      );\n\n    await DiscordServers.findOneAndUpdate(\n      { server_id: serverId },\n      { pug_channel: message.channel.id }\n    ).exec();\n\n    store.dispatch(setPugChannel({ serverId, pugChannel: message.channel.id }));\n\n    message.channel.send(\n      `<#${message.channel.id}> has been set as the pug channel`\n    );\n  } catch (err) {\n    message.channel.send(\n      'Something went wrong. The developer of this bot has been notified '\n    );\n  }\n};\n"],"file":"genericHandlers.js"}