{"version":3,"sources":["../src/formats.js"],"names":["embedColor","formatQueryServers","list","richEmbed","Discord","RichEmbed","description","reduce","acc","curr","index","name","setTitle","setColor","setDescription","setFooter","formatQueryServerStatus","info","players","xServerQueryProps","remainingTime","teamScores","playerList","parseInt","numplayers","maxteams","xserverquery","remainingtime","minutes","seconds","timelimit","Object","keys","forEach","team","teamIndex","p","teamPlayers","teams","spec","length","addField","mapname","maxplayers","footerText","host","port","hostname","formatListGameTypes","guildName","title","sortedList","sort","a","b","body","i","toUpperCase","maxPlayers","formatJoinStatus","statuses","joined","user","activeCount","nf","missed","emojis","tearddy","aj","username","formatLeaveStatus","isOffline","left","nj","smart","residentsleeper","pupcurn","formatDeadPugs","deadPugs","pug","trumpXD","formatBroadcastPug","toBroadcast","moskva","player","id","footer","prefix","captainTimeout","formatListAllCurrentGameTypes","prev","base","noOfPlayers","u","formatAddCaptainStatus","formatPickPlayerStatus","pickedPlayers","finished","picked","count","next","captains","pickingOrder","turn","pugTeams","Array","noOfTeams","fill","_","rating","toFixed","tag","currTeams","pick","activeTeams","values","slice","formatPugsInPicking","pugsInPicking","formatBroadcastCaptainsReady","pugCaptains","captain","pugPlayers","formatPromoteAvailablePugs","pugs","picking","formatLastPugStatus","action","timestamp","distanceInWords","Date","addSuffix","charAt","formatUserStats","stats","last_pug","totalPugs","totalCaptains","totalCaptain","totals","distance","lastMetaData","collectiveStatsTitle","collectiveStatsBody","entries","pugName","pugStats","totalRating"],"mappings":"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","sourcesContent":["import Discord from 'discord.js';\nimport {\n  getPlayerList,\n  getMinutesAndSeconds,\n  getTeamScores,\n  padNumberWithZeros,\n  getTeamIndex,\n} from './utils';\nimport { teams, prefix, captainTimeout, emojis } from './constants';\nimport { distanceInWordsStrict } from 'date-fns';\n\nconst embedColor = '#11806A';\n\nexport const formatQueryServers = list => {\n  const richEmbed = new Discord.RichEmbed();\n\n  const description = list.reduce((acc, curr, index) => {\n    acc += `\\`${index + 1}\\`\\u00A0\\u00A0\\u00A0${curr.name}\\n`;\n    return acc;\n  }, '');\n\n  richEmbed.setTitle(`IP\\u00A0\\u00A0\\u00A0Name`);\n  richEmbed.setColor(embedColor);\n  richEmbed.setDescription(description || 'No game servers added yet');\n  richEmbed.setFooter('To query, type .q ip');\n  return richEmbed;\n};\n\nexport const formatQueryServerStatus = (info, players) => {\n  const richEmbed = new Discord.RichEmbed();\n\n  const xServerQueryProps = { remainingTime: null, teamScores: {} };\n  const playerList = getPlayerList(\n    players,\n    parseInt(info.numplayers) || 0,\n    !!info.maxteams\n  );\n\n  if (info.xserverquery) {\n    const { minutes, seconds } = getMinutesAndSeconds(\n      parseInt(info.remainingtime)\n    );\n    const teamScores = getTeamScores(info, info.maxteams);\n    xServerQueryProps.remainingTime = `${\n      (minutes === parseInt(info.timelimit) && seconds === 0) ||\n      minutes < parseInt(info.timelimit)\n        ? '**Remaining Time:**'\n        : '**Overtime**:'\n    } ${padNumberWithZeros(minutes)}:${padNumberWithZeros(seconds)} \\n`;\n    xServerQueryProps.teamScores = Object.keys(teamScores).reduce(\n      (acc, curr) => {\n        const index = getTeamIndex(curr);\n        acc[index] = ` • ${teamScores[curr]}`;\n        return acc;\n      },\n      []\n    );\n  }\n\n  Object.keys(playerList).forEach(team => {\n    const teamIndex = getTeamIndex(team);\n    const p = playerList[team];\n    const teamPlayers = p.reduce((acc, curr) => {\n      if (team == teams.spec) acc += curr + ' • ';\n      else acc += curr + ' ' + '\\n';\n      return acc;\n    }, '');\n\n    p.length > 0\n      ? richEmbed.addField(\n          team + (xServerQueryProps.teamScores[teamIndex] || ``),\n          teamPlayers,\n          team !== teams.spec\n        )\n      : '';\n  });\n\n  const description = `**Map:** ${info.mapname}\\n**Players:** ${\n    info.numplayers\n  }/${info.maxplayers}\\n${xServerQueryProps.remainingTime || ''}`;\n  const footerText = `unreal://${info.host}:${info.port}`;\n\n  richEmbed.setTitle(info.hostname);\n  richEmbed.setColor(embedColor);\n  richEmbed.setDescription(description);\n  richEmbed.setFooter(footerText);\n  return richEmbed;\n};\n\nexport const formatListGameTypes = (guildName, list) => {\n  const title = `Pugs available at **${guildName}**`;\n  const sortedList = list.sort((a, b) => b.players - a.players); // by number of joined players\n\n  const body = sortedList.reduce((acc, curr, i) => {\n    acc += `**${curr.name.toUpperCase()}** (${curr.players}/${\n      curr.maxPlayers\n    }) ${i === list.length - 1 ? '' : ':small_orange_diamond:'}`;\n    return acc;\n  }, ``);\n\n  return `${title}\\n${body}`;\n};\n\nexport const formatJoinStatus = statuses => {\n  const { joined, missed, nf, aj, user } = statuses.reduce(\n    (acc, { joined, user, name, activeCount, maxPlayers }) => {\n      switch (joined) {\n        case -1:\n          acc.nf += `No pug found: **${name.toUpperCase()}**\\n`;\n          break;\n        case 0:\n          acc.missed += `Sorry, **${name.toUpperCase()}** is already filled ${\n            emojis.tearddy\n          }\\n`;\n          break;\n        case 1:\n          acc.joined += `**${name.toUpperCase()}** (${activeCount}/${maxPlayers}) :small_orange_diamond: `;\n          break;\n        case 2:\n          acc.aj += `**${name.toUpperCase()}** `;\n          break;\n        default:\n          null;\n      }\n      acc.user = user;\n      return acc;\n    },\n    {\n      joined: ``,\n      missed: ``,\n      nf: ``,\n      aj: ``,\n      user: null,\n    }\n  );\n\n  const body = `${\n    joined.length > 0\n      ? `${user.username} joined :small_orange_diamond: ${joined}`\n      : ``\n  } ${missed.length > 0 ? `\\n${missed}` : ``} ${\n    aj.length > 0 ? `\\n${user.username}, you have already joined ${aj}` : ``\n  } ${nf.length > 0 ? `\\n${nf}` : ``}`;\n\n  return body;\n};\n\nexport const formatLeaveStatus = (statuses, isOffline) => {\n  const { left, nj, nf, user } = statuses.reduce(\n    (acc, { left, name, user, activeCount, maxPlayers }) => {\n      switch (left) {\n        case 1:\n          acc.left += `${\n            acc.left.length > 0 ? `, ` : ``\n          }**${name.toUpperCase()}** (${activeCount}/${maxPlayers})`;\n          acc.user = user;\n          break;\n        case 0:\n          acc.nj = `Cannot leave pug(s) you haven't joined ${emojis.smart}`;\n          break;\n        case -1:\n          acc.nf += `No pug found: **${name.toUpperCase()}**\\n`;\n          break;\n        default:\n          null;\n      }\n      return acc;\n    },\n    { user: null, left: ``, nj: ``, nf: `` }\n  );\n\n  const body = `${\n    left.length > 0\n      ? `${user.username} left  ${left} ${\n          isOffline\n            ? `because the user went offline ${emojis.residentsleeper}${\n                emojis.pupcurn\n              }`\n            : ``\n        }`\n      : ``\n  }${nj.length > 0 ? `\\n${nj}` : ``}${nf.length > 0 ? `\\n${nf}` : ``}`;\n  return body;\n};\n\nexport const formatDeadPugs = deadPugs => {\n  const body = deadPugs.reduce((acc, { pug, user }, i) => {\n    acc += `${i > 0 ? `\\n` : ``} ${\n      emojis.trumpXD\n    } **${pug.name.toUpperCase()}** was stopped because **${\n      user.username\n    }** left ${emojis.trumpXD}`;\n    return acc;\n  }, ``);\n  return body;\n};\n\nexport const formatBroadcastPug = toBroadcast => {\n  const title = `${\n    emojis.moskva\n  } :mega: **${toBroadcast.name.toUpperCase()}** has been filled!`;\n  const body = toBroadcast.players.reduce((acc, player) => {\n    acc += `<@${player.id}> `;\n    return acc;\n  }, ``);\n  const footer = `Type **${prefix}captain** to become a captain for this pug. Random captains will be picked in ${captainTimeout /\n    1000} seconds`;\n\n  return `${title}\\n${body}\\n${footer}\\n`;\n};\n\nexport const formatListAllCurrentGameTypes = (list, guildName) => {\n  const body = list.reduce((prev, curr) => {\n    const base = `**${curr.name.toUpperCase()}** (${curr.players.length}/${\n      curr.noOfPlayers\n    }) `;\n\n    const players = curr.players.reduce((acc, u) => {\n      acc += `:small_orange_diamond: ${u.username} `;\n      return acc;\n    }, ``);\n\n    prev += `${base}${players}\\n`;\n    return prev;\n  }, ``);\n\n  return body\n    ? `Listing active pugs at **${guildName}**\\n${body}`\n    : `There are currently no active pugs, try joining one!`;\n};\n\nexport const formatAddCaptainStatus = (user, { team }) => {\n  const body = `**${user.username}** became captain for **${teams[\n    `team_${team}`\n  ].toUpperCase()}**`;\n  return body;\n};\n\nexport const formatPickPlayerStatus = ({ pickedPlayers, finished, pug }) => {\n  const picked = pickedPlayers.reduce((acc, curr) => {\n    acc += `<@${curr.player.id}> was picked for **${\n      teams[`team_${curr.team}`]\n    }**\\n`;\n    return acc;\n  }, ``);\n\n  let count = 0;\n  const next = pug.captains[pug.pickingOrder[pug.turn]];\n\n  if (!finished) {\n    for (let i = pug.turn; ; i++) {\n      if (pug.pickingOrder[i] !== next.team) break;\n      count++;\n    }\n  }\n\n  const turn = finished\n    ? `:fire: **Picking has finished** :fire:`\n    : `<@${next.id}> pick ${count} player${count > 1 ? 's' : ''} for **${\n        teams[`team_${next.team}`]\n      }**`;\n\n  const pugTeams = Array(pug.noOfTeams)\n    .fill(0)\n    .reduce((acc, _, i) => {\n      acc[i] = `**${teams[`team_${i}`]}**: `;\n      return acc;\n    }, {});\n\n  const players = pug.players.reduce((acc, curr, index) => {\n    if (curr.team === null)\n      acc += `**${index + 1})** *${curr.username}* (${\n        curr.rating === 0 ? 'no rating' : curr.rating.toFixed(2)\n      }) ${curr.tag ? `[${curr.tag}] ` : ''}`;\n    return acc;\n  }, `Players: `);\n\n  const currTeams = [...pug.players]\n    .sort((a, b) => a.pick - b.pick)\n    .reduce((acc, curr) => {\n      if (curr.team !== null)\n        acc[curr.team] += `*${curr.username}* :small_orange_diamond: `;\n      return acc;\n    }, pugTeams);\n\n  const activeTeams = Object.values(currTeams).reduce((acc, curr) => {\n    acc += `${curr.slice(0, curr.length - 24)}\\n`;\n    return acc;\n  }, ``);\n\n  return `${picked}\\n${turn}\\n${finished ? '' : '\\n'}${\n    finished ? `` : `${players}\\n`\n  }\\n${activeTeams}`;\n};\n\nexport const formatPugsInPicking = pugsInPicking => {\n  const body = pugsInPicking.reduce((acc, pug) => {\n    let count = 0;\n    const next = pug.captains[pug.pickingOrder[pug.turn]];\n    for (let i = pug.turn; ; i++) {\n      if (pug.pickingOrder[i] !== next.team) break;\n      count++;\n    }\n    const turn = `<@${next.id}> pick ${count} player${\n      count > 1 ? 's' : ''\n    } for **${teams[`team_${next.team}`]}**`;\n\n    const pugTeams = Array(pug.noOfTeams)\n      .fill(0)\n      .reduce((acc, _, i) => {\n        acc[i] = `**${teams[`team_${i}`]}**: `;\n        return acc;\n      }, {});\n\n    const players = pug.players.reduce((acc, curr, index) => {\n      if (curr.team === null)\n        acc += `**${index + 1})** *${curr.username}* (${\n          curr.rating === 0 ? 'no rating' : curr.rating.toFixed(2)\n        }) ${curr.tag ? `[${curr.tag}] ` : ''}`;\n      return acc;\n    }, `Players: `);\n\n    const currTeams = [...pug.players]\n      .sort((a, b) => a.pick - b.pick)\n      .reduce((acc, curr) => {\n        if (curr.team !== null)\n          acc[curr.team] += `*${curr.username}* :small_orange_diamond: `;\n        return acc;\n      }, pugTeams);\n\n    const activeTeams = Object.values(currTeams).reduce((acc, curr) => {\n      acc += `${curr.slice(0, curr.length - 24)}\\n`;\n      return acc;\n    }, ``);\n\n    acc += `${turn}\\n\\n${players}\\n\\n${activeTeams}\\n\\n`;\n    return acc;\n  }, ``);\n\n  return body;\n};\n\nexport const formatBroadcastCaptainsReady = ({ players, captains }) => {\n  const pugCaptains = captains.reduce((acc, curr, index) => {\n    acc += `<@${curr.id}> is the captain for **${teams[`team_${index}`]}**\\n`;\n    return acc;\n  }, ``);\n\n  const turn = `<@${captains[0].id}> pick 1 player for **${teams[`team_0`]}**`;\n  const { pugPlayers } = players.reduce(\n    (acc, curr, index) => {\n      if (curr.captain === null)\n        acc.pugPlayers += `**${index + 1})** *${curr.username}* (${\n          curr.rating === 0 ? 'no rating' : curr.rating.toFixed(2)\n        }) ${curr.tag ? `[${curr.tag}] ` : ''}`;\n      return acc;\n    },\n    { pugPlayers: `Players: ` }\n  );\n\n  return `${pugCaptains}\\n${turn}\\n${pugPlayers}`;\n};\n\nexport const formatPromoteAvailablePugs = (pugs, guildName) => {\n  const title = `@here in **${guildName}**`;\n  const body = pugs.reduce((acc, curr) => {\n    if (!curr.picking) {\n      acc += `**${curr.noOfPlayers -\n        curr.players\n          .length}** more needed for **${curr.name.toUpperCase()}**\\n`;\n    }\n    return acc;\n  }, ``);\n  return `${title}\\n${body}`;\n};\n\nexport const formatLastPugStatus = ({ pug, guildName }, action, timestamp) => {\n  const distanceInWords = distanceInWordsStrict(new Date(), timestamp, {\n    addSuffix: true,\n  });\n  const title = `${action.charAt(0).toUpperCase() +\n    action.slice(\n      1\n    )} **${pug.name.toUpperCase()}** at **${guildName}** (${distanceInWords})`;\n\n  const pugTeams = Array(pug.noOfTeams)\n    .fill(0)\n    .reduce((acc, _, i) => {\n      acc[i] = `**${teams[`team_${i}`]}**: `;\n      return acc;\n    }, {});\n\n  const currTeams = [...pug.players]\n    .sort((a, b) => a.pick - b.pick)\n    .reduce((acc, curr) => {\n      if (curr.team !== null)\n        acc[curr.team] += `*${curr.username}* :small_orange_diamond: `;\n      return acc;\n    }, pugTeams);\n\n  const activeTeams = Object.values(currTeams).reduce((acc, curr) => {\n    acc += `${curr.slice(0, curr.length - 24)}\\n`;\n    return acc;\n  }, ``);\n\n  return `${title}\\n\\n${activeTeams}`;\n};\n\nexport const formatUserStats = ({ username, stats, last_pug }) => {\n  const totalPugs = Object.values(stats).reduce(\n    (acc, curr) => (acc += curr.totalPugs || 0),\n    0\n  );\n  const totalCaptains = Object.values(stats).reduce(\n    (acc, curr) => (acc += curr.totalCaptain || 0),\n    0\n  );\n  const title = `:pencil: Showing stats for **${username}** :pencil:`;\n  const totals = `:video_game: played **${totalPugs}** pug${\n    totalPugs !== 1 ? 's' : ''\n  } • :cop: captained **${totalCaptains}** time${\n    totalCaptains !== 1 ? 's' : ''\n  }`;\n  const distance = distanceInWordsStrict(new Date(), last_pug.timestamp, {\n    addSuffix: true,\n  });\n\n  const pugTeams = Array(last_pug.noOfTeams)\n    .fill(0)\n    .reduce((acc, _, i) => {\n      acc[i] = `\\t**${teams[`team_${i}`]}**: `;\n      return acc;\n    }, {});\n\n  const currTeams = [...last_pug.players]\n    .sort((a, b) => a.pick - b.pick)\n    .reduce((acc, curr) => {\n      if (curr.team !== null)\n        acc[curr.team] += `*${curr.username}* :small_orange_diamond: `;\n      return acc;\n    }, pugTeams);\n\n  const activeTeams = Object.values(currTeams).reduce((acc, curr) => {\n    acc += `${curr.slice(0, curr.length - 24)}\\n`;\n    return acc;\n  }, ``);\n\n  const lastMetaData = `Last pug played was **${last_pug.name.toUpperCase()}** (${distance})`;\n  const collectiveStatsTitle = `__**Gametypes**__ [total • captained • rating]`;\n  const collectiveStatsBody = Object.entries(stats).reduce(\n    (acc, [pugName, pugStats], i) => {\n      acc += `**${pugName}** [**${pugStats.totalPugs}** pug${\n        pugStats.totalPugs !== 1 ? 's' : ''\n      } • **${pugStats.totalCaptain}**x captain • ${\n        pugStats.totalRating === 0 ? `no` : `${pugStats.totalRating.toFixed(2)}`\n      } rating] ${i > 0 ? ':small_blue_diamond: ' : ''}`;\n      return acc;\n    },\n    ``\n  );\n\n  return `${title}\\n\\n${totals}\\n\\n${lastMetaData}\\n${activeTeams}\\n${collectiveStatsTitle}\\n${collectiveStatsBody}`;\n};\n"],"file":"formats.js"}